import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.buildSteps.script


object JourneyMakerV1 : BuildType({
    name = "JourneyMaker_v1"

    artifactRules = "%env.JOURNEY_NAME%.txt"

    params {
        param("JOURNEY_SCRIPT", "")
        param("env.JOURNEY_NAME", "DEFAULT NAME")
    }

    val REPO_DIR = "TeamCityBuildServer"

    steps {
        script {
            id = "simpleRunner"
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                
                # ------------------------------------------------------------------
                # 1. Compose the target file name
                #    JOURNEY_NAME should be defined as an Environment / System
                #    parameter so it is available as ${'$'}JOURNEY_NAME
                # ------------------------------------------------------------------
                FILE_NAME="${'$'}{JOURNEY_NAME}.txt"
                
                # ------------------------------------------------------------------
                # 2. Write the parameter value into the file
                #    %JOURNEY_SCRIPT% is substituted by TeamCity → becomes a literal
                #    string inside the here-document, preserving line breaks.
                # ------------------------------------------------------------------
                cat > "${'$'}{FILE_NAME}" <<'EOF'
                %JOURNEY_SCRIPT%
                EOF
            """.trimIndent()
        }
        script {
            name = "Generate Journey Build"
            scriptContent = """
                set -euo pipefail
                REPO_DIR=$(mktemp -d)

                # Clone settings repo
                git clone --depth 1 git@<your-git-server>:teamcity/settings-project-a.git "$REPO_DIR"
                cd "$REPO_DIR/.teamcity"

                # Prepare identifiers
                ID_SUFFIX=$(date +%s)   # or use %%teamcity.build.id%%
                JOURNEY_NAME="${'$'}{journeyName}"

                # Create Kotlin file
                cat > "Journey_${'$'}{ID_SUFFIX}.kt" <<EOF
                package Project_A

                import jetbrains.buildServer.configs.kotlin.*
                import Project_A.newJourneyBuild

                // Auto-generated by Producer build %%teamcity.build.id%%
                object Journey_${'$'}{ID_SUFFIX} : BuildType(
                    newJourneyBuild(${'$'}{JOURNEY_NAME}, ${'$'}{JOURNEY_NAME})
                )
                EOF

                # Commit & push
                git add .
                git commit -m "Auto-generate journey build: ${'$'}{JOURNEY_NAME}"
                git push origin HEAD:main
            """.trimIndent()
        }

    }
})

fun newJourneyBuild(idSuffix: String, journeyName: String): BuildType =
    BuildType {
        id("Journey_$idSuffix")
        name = "Journey – $journeyName"
        templates(JourneyTemplate)
        params {
            param("journeyName", journeyName)
        }
        // optionally: triggers/snapshot dependencies can also be put here
    }

object JourneyTemplate : Template({
    name = "RunJourneyTemplate"

    params {
        param("journeyName", "not-set-in-template")
    }

    steps {
        script {
            name = "Run Journey"
            scriptContent = """
                echo "Running journey: %journeyName%"
                # example: call Playwright / Cypress / etc.
            """.trimIndent()
        }
    }
})