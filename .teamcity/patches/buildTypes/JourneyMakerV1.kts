package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.buildSteps.script
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'JourneyMakerV1'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("JourneyMakerV1")) {
    check(artifactRules == "%env.JOURNEY_NAME%.txt") {
        "Unexpected option value: artifactRules = $artifactRules"
    }
    artifactRules = """
        %env.JOURNEY_NAME%.txt
        +:**/*
    """.trimIndent()

    expectSteps {
        script {
            id = "simpleRunner"
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                
                # ------------------------------------------------------------------
                # 1. Compose the target file name
                #    JOURNEY_NAME should be defined as an Environment / System
                #    parameter so it is available as ${'$'}JOURNEY_NAME
                # ------------------------------------------------------------------
                FILE_NAME="${'$'}{JOURNEY_NAME}.txt"
                
                # ------------------------------------------------------------------
                # 2. Write the parameter value into the file
                #    %JOURNEY_SCRIPT% is substituted by TeamCity → becomes a literal
                #    string inside the here-document, preserving line breaks.
                # ------------------------------------------------------------------
                cat > "${'$'}{FILE_NAME}" <<'EOF'
                %JOURNEY_SCRIPT%
                EOF
            """.trimIndent()
        }
        script {
            name = "Generate Journey Build"
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                
                # 1) Write the exact Kotlin source you supplied ------------------------------
                cat > "Journey.kt" <<'EOF'
                import jetbrains.buildServer.configs.kotlin.*
                
                object Journey_${'$'}{'${'$'}'}{FILE_NAME} : BuildType({
                    name = "${'$'}{'${'$'}'}{FILE_NAME}"
                
                    templates(JourneyExecutorTemplate)
                })
                EOF
                
                # 2) Base-64-encode it as one line (portable between Linux/macOS) ------------
                b64=${'$'}(base64 < Journey.kt | tr -d '\n')
                
                # 3) Build the JSON request ---------------------------------------------------
                payload=${'$'}(cat <<EOF
                {
                  "message": "Add Journey_${'$'}{JOURNEY_NAME}.kt",
                  "branch": "main",
                  "content": "${'$'}{b64}"
                }
                EOF
                )
                
                # 4) Upload (create or update) the file on GitHub ----------------------------
                curl -f -s \
                  -X PUT \
                  -H "Authorization: Bearer ${'$'}{GIT_PAT_TOKEN}" \
                  -H "Content-Type: application/json" \
                  --data "${'$'}{payload}" \
                  "https://api.github.com/repos/ChiriacCasian/TeamCityBuildServer/contents/.teamcity/Journey_FirstGeneratedJourney.kt"
                
                echo "✅ uploaded successfully"
            """.trimIndent()
        }
    }
    steps {
        update<ScriptBuildStep>(1) {
            clearConditions()
            scriptContent = """
                payload=${'$'}(cat <<EOF
                {
                  "id"        : "SecondProject_Journey_${'$'}{JOURNEY_NAME}",
                  "name"      : "${'$'}{JOURNEY_NAME}",
                  "projectId" : "SecondProject",
                  "template": { "id": "SecondProject_JourneyExecutorTemplate" },
                  
                	"artifact-dependencies": {
                    "count": 1,
                    "artifact-dependency": [
                      {
                        "id": "ARTIFACT_DEPENDENCY_2",
                        "type": "artifact_dependency",
                        "properties": {
                          "property": [
                            {
                              "name": "cleanDestinationDirectory",
                              "value": "false"
                            },
                            {
                              "name": "pathRules",
                              "value": "*.txt"
                            },
                            {
                              "name": "revisionName",
                              "value": "buildNumber"
                            },
                            {
                              "name": "revisionValue",
                              "value": "%system.build.number%"
                            }
                          ],
                          "count": 4
                        },
                        "source-buildType": {
                          "id": "SecondProject_JourneyMakerV1"
                        }
                      }
                    ]
                  }
                }
                EOF
                )
                
                curl -i -sS \
                  -H "Authorization: Bearer ${'$'}{GIT_PAT_TOKEN}" \
                  -H "Content-Type: application/json" \
                  -X POST \
                  "localhost:8111/app/rest/buildTypes" \
                  -d "${'$'}{payload}"
            """.trimIndent()
            param("teamcity.kubernetes.executor.pull.policy", "")
        }
    }

    requirements {
        add {
            exists("env.DEVICE_UUID")
        }
    }
}
