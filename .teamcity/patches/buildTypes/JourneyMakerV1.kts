package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.buildSteps.script
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'JourneyMakerV1'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("JourneyMakerV1")) {
    expectSteps {
        script {
            id = "simpleRunner"
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                
                # ------------------------------------------------------------------
                # 1. Compose the target file name
                #    JOURNEY_NAME should be defined as an Environment / System
                #    parameter so it is available as ${'$'}JOURNEY_NAME
                # ------------------------------------------------------------------
                FILE_NAME="${'$'}{JOURNEY_NAME}.txt"
                
                # ------------------------------------------------------------------
                # 2. Write the parameter value into the file
                #    %JOURNEY_SCRIPT% is substituted by TeamCity â†’ becomes a literal
                #    string inside the here-document, preserving line breaks.
                # ------------------------------------------------------------------
                cat > "${'$'}{FILE_NAME}" <<'EOF'
                %JOURNEY_SCRIPT%
                EOF
            """.trimIndent()
        }
        script {
            name = "Generate Journey Build"
            scriptContent = """
                set -euo pipefail
                REPO_DIR=${'$'}(mktemp -d)
                
                # Clone settings repo
                git clone --depth 1 git@<your-git-server>:teamcity/settings-project-a.git "TeamCityBuildServer"
                cd "TeamCityBuildServer/.teamcity"
                
                # Prepare identifiers
                ID_SUFFIX=${'$'}(date +%s)   # or use %%teamcity.build.id%%
                JOURNEY_NAME="${'$'}{journeyName}"
                
                # Create Kotlin file
                cat > "Journey_${'$'}{ID_SUFFIX}.kt" <<EOF
                package Project_A
                
                import jetbrains.buildServer.configs.kotlin.*
                import Project_A.newJourneyBuild
                
                // Auto-generated by Producer build %%teamcity.build.id%%
                object Journey_${'$'}{ID_SUFFIX} : BuildType(
                    newJourneyBuild(${'$'}{JOURNEY_NAME}, ${'$'}{JOURNEY_NAME})
                )
                EOF
                
                # Commit & push
                git add .
                git commit -m "Auto-generate journey build: ${'$'}{JOURNEY_NAME}"
                git push origin HEAD:main
            """.trimIndent()
        }
    }
    steps {
        update<ScriptBuildStep>(1) {
            clearConditions()
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                REPO_DIR=${'$'}(mktemp -d)
                
                # Clone settings repo
                git clone --depth 1 git@github.com:ChiriacCasian/TeamCityBuildServer.git "TeamCityBuildServer"
                cd "TeamCityBuildServer/.teamcity"
                
                # Prepare identifiers
                ID_SUFFIX=${'$'}(date +%s)   # or use %%teamcity.build.id%%
                JOURNEY_NAME="${'$'}{journeyName}"
                
                # Create Kotlin file
                cat > "Journey_${'$'}{ID_SUFFIX}.kt" <<EOF
                package Project_A
                
                import jetbrains.buildServer.configs.kotlin.*
                import Project_A.newJourneyBuild
                
                // Auto-generated by Producer build %%teamcity.build.id%%
                object Journey_${'$'}{ID_SUFFIX} : BuildType(
                    newJourneyBuild(${'$'}{JOURNEY_NAME}, ${'$'}{JOURNEY_NAME})
                )
                EOF
                
                # Commit & push
                git add .
                git commit -m "Auto-generate journey build: ${'$'}{JOURNEY_NAME}"
                git push origin HEAD:main
            """.trimIndent()
            param("teamcity.kubernetes.executor.pull.policy", "")
        }
    }
}
