package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.BuildType
import jetbrains.buildServer.configs.kotlin.buildFeatures.swabra
import jetbrains.buildServer.configs.kotlin.buildSteps.script
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, create a buildType with id = 'Journey_SixthGeneratedBuild13'
in the root project, and delete the patch script.
*/
create(DslContext.projectId, BuildType({
    templates(RelativeId("JourneyExecutorTemplate"))
    id("Journey_SixthGeneratedBuild13")
    name = "SixthGeneratedBuild13"

    artifactRules = "+:**/*"

    params {
        param("journeyName", "ceva")
    }

    steps {
        script {
            name = "Run Journey"
            id = "TEMPLATE_RUNNER_1"
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                
                ART_DIR="./scripts"
                shopt -s nullglob                                # avoid literal *.txt when none
                
                echo "Artifacts present in: ${'$'}ART_DIR"
                for f in "${'$'}ART_DIR"/*.txt; do
                  # Obtain absolute path (works on most Linux & macOS agents)
                  abs_path="${'$'}(realpath "${'$'}f" 2>/dev/null || readlink -f "${'$'}f")"
                  echo " - ${'$'}(basename "${'$'}f")   â†’   ${'$'}abs_path"
                done
            """.trimIndent()
        }
    }

    features {
        swabra {
            id = "swabra"
        }
    }

    dependencies {
        artifacts(RelativeId("JourneyMakerV1")) {
            id = "ARTIFACT_DEPENDENCY_7"
            buildRule = build("80")
            artifactRules = "*.txt=>scripts"
        }
    }

    requirements {
        exists("env.ADB_SERVER_SOCKET", "RQ_3")
    }
}))

