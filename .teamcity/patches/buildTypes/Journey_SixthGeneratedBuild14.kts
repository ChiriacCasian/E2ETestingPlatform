package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.BuildType
import jetbrains.buildServer.configs.kotlin.buildFeatures.swabra
import jetbrains.buildServer.configs.kotlin.buildSteps.script
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, create a buildType with id = 'Journey_SixthGeneratedBuild14'
in the root project, and delete the patch script.
*/
create(DslContext.projectId, BuildType({
    templates(RelativeId("JourneyExecutorTemplate"))
    id("Journey_SixthGeneratedBuild14")
    name = "SixthGeneratedBuild14"

    params {
        param("journeyName", "ceva")
    }

    steps {
        script {
            name = "Run Journey"
            id = "TEMPLATE_RUNNER_1"
            scriptContent = """
                #!/usr/bin/env bash
                set -euo pipefail
                shopt -s nullglob          # ignore the glob if the file is missing
                
                ART_DIR="./scripts"
                
                # Expect exactly one .txt file in ART_DIR
                txt_files=("${'$'}ART_DIR"/*.txt)
                if [[ ${'$'}{#txt_files[@]} -ne 1 ]]; then
                  echo "Error: expected exactly one .txt file in ${'$'}ART_DIR, found ${'$'}{#txt_files[@]}." >&2
                  exit 1
                fi
                
                # Absolute path (realpath first, fallback to readlink -f)
                abs_path="${'$'}(realpath "${'$'}{txt_files[0]}" 2>/dev/null || readlink -f "${'$'}{txt_files[0]}")"
                echo "Script found: ${'$'}abs_path"
                
                # Call the endpoint â€” adjust URL / headers to match your service
                curl -X POST \
                     --data-urlencode "scriptPath=${'$'}abs_path" \
                     --data-urlencode "type=WEB" \
                     http://localhost:8060/runJourney
                
                
                echo "runJourney invoked successfully."
            """.trimIndent()
        }
    }

    features {
        swabra {
            id = "swabra"
        }
    }

    dependencies {
        artifacts(RelativeId("JourneyMakerV1")) {
            id = "ARTIFACT_DEPENDENCY_8"
            buildRule = build("84")
            artifactRules = "SixthGeneratedBuild14.txt=>scripts"
        }
    }
}))

